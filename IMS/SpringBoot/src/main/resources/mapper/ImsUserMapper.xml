<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ims.mapper.ImsUserMapper" >
  <resultMap id="BaseResultMap" type="com.ims.entity.ImsUser" >
    <id column="USER_CODE" property="userCode" jdbcType="INTEGER" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="USER_PASSWORD" property="userPassword" jdbcType="VARCHAR" />
    <result column="USER_TEL" property="userTel" jdbcType="VARCHAR" />
    <result column="USER_STATE" property="userState" jdbcType="VARCHAR" />
    <result column="USER_ROLE" property="userRole" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    USER_CODE, USER_NAME, USER_PASSWORD, USER_TEL, USER_STATE, USER_ROLE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ims.entity.ImsUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ims_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ims_user
    where USER_CODE = #{userCode,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ims_user
    where USER_CODE = #{userCode,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ims.entity.ImsUserExample" >
    delete from ims_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ims.entity.ImsUser" >
    insert into ims_user (USER_CODE, USER_NAME, USER_PASSWORD, 
      USER_TEL, USER_STATE, USER_ROLE
      )
    values (#{userCode,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userTel,jdbcType=VARCHAR}, #{userState,jdbcType=VARCHAR}, #{userRole,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ims.entity.ImsUser" >
    insert into ims_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userCode != null" >
        USER_CODE,
      </if>
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="userPassword != null" >
        USER_PASSWORD,
      </if>
      <if test="userTel != null" >
        USER_TEL,
      </if>
      <if test="userState != null" >
        USER_STATE,
      </if>
      <if test="userRole != null" >
        USER_ROLE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userCode != null" >
        #{userCode,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null" >
        #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="userState != null" >
        #{userState,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null" >
        #{userRole,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ims.entity.ImsUserExample" resultType="java.lang.Integer" >
    select count(*) from ims_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ims_user
    <set >
      <if test="record.userCode != null" >
        USER_CODE = #{record.userCode,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null" >
        USER_PASSWORD = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userTel != null" >
        USER_TEL = #{record.userTel,jdbcType=VARCHAR},
      </if>
      <if test="record.userState != null" >
        USER_STATE = #{record.userState,jdbcType=VARCHAR},
      </if>
      <if test="record.userRole != null" >
        USER_ROLE = #{record.userRole,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ims_user
    set USER_CODE = #{record.userCode,jdbcType=INTEGER},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      USER_PASSWORD = #{record.userPassword,jdbcType=VARCHAR},
      USER_TEL = #{record.userTel,jdbcType=VARCHAR},
      USER_STATE = #{record.userState,jdbcType=VARCHAR},
      USER_ROLE = #{record.userRole,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ims.entity.ImsUser" >
    update ims_user
    <set >
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        USER_PASSWORD = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null" >
        USER_TEL = #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="userState != null" >
        USER_STATE = #{userState,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null" >
        USER_ROLE = #{userRole,jdbcType=VARCHAR},
      </if>
    </set>
    where USER_CODE = #{userCode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ims.entity.ImsUser" >
    update ims_user
    set USER_NAME = #{userName,jdbcType=VARCHAR},
      USER_PASSWORD = #{userPassword,jdbcType=VARCHAR},
      USER_TEL = #{userTel,jdbcType=VARCHAR},
      USER_STATE = #{userState,jdbcType=VARCHAR},
      USER_ROLE = #{userRole,jdbcType=VARCHAR}
    where USER_CODE = #{userCode,jdbcType=INTEGER}
  </update>
</mapper>